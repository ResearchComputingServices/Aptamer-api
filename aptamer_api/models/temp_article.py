from marshmallow import Schema, fields, ValidationError, pre_load
from aptamer_api.models.base_model import BaseModel, BaseModelSchema
from aptamer_api.extensions import db, ma
from sqlalchemy.orm import relationship
import datetime

class TempArticle(db.Model):
    __tablename__ = 'temp_article'
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    name = db.Column(db.String())
    pubmedid = db.Column(db.String())
    doinumber = db.Column(db.String())
    aptamertargettype = db.Column(db.String())
    aptamertargetname = db.Column(db.String())
    aptamersequence = db.Column(db.String())
    lengthofrandomregion = db.Column(db.String())
    templatesequence = db.Column(db.String())
    yearofpublication = db.Column(db.String())
    templatebias = db.Column(db.String())
    selexmethod = db.Column(db.String())
    numberofselectionrounds = db.Column(db.String())
    separationpartitioningmethod = db.Column(db.String())
    elutionrecoverymethod = db.Column(db.String())
    selectionsolutionbufferingagent = db.Column(db.String())

    selectionsolutionph = db.Column(db.String())
    selectionsolutiontemperature = db.Column(db.String())
    concentrationkm = db.Column(db.String())
    concentrationmgm = db.Column(db.String())
    concentrationnam = db.Column(db.String())
    concentrationznm = db.Column(db.String())
    concentrationcam = db.Column(db.String())
    concentrationotherm = db.Column(db.String())
    affinitymethod = db.Column(db.String())
    affinitymethodconditions = db.Column(db.String())
    aptamertype = db.Column(db.String())
    othermodification = db.Column(db.String())
    kdvalueinmolar = db.Column(db.String())
    kderror = db.Column(db.String())
    testedapplicationpurpose = db.Column(db.String())
    mutationalanalysis = db.Column(db.String())
    minamersyesno = db.Column(db.String())
    minimeronesequence = db.Column(db.String())
    minimeronekd = db.Column(db.String())
    minimertwosequence = db.Column(db.String())
    minimertwokd = db.Column(db.String())
    minimerthreesequence = db.Column(db.String())
    minimerthreekd = db.Column(db.String())
    notes = db.Column(db.String())

    status = db.Column(db.String())
    operator = db.Column(db.String())
    created_datetime = db.Column(db.DateTime(), default=datetime.datetime.utcnow)




    def __init__(self, item):
        #BaseModel.__init__(self, item)
        self.id = item.get('id')
        self.name = item.get('name')
        self.pubmedid = item.get('pubmedid')
        self.doinumber = item.get('doinumber')
        self.aptamertargettype = item.get('aptamertargettype')
        self.aptamertargetname = item.get('aptamertargetname')
        self.aptamersequence = item.get('aptamersequence')
        self.lengthofrandomregion = item.get('lengthofrandomregion')
        self.templatesequence = item.get('templatesequence')
        self.yearofpublication = item.get('yearofpublication')
        self.templatebias = item.get('templatebias')
        self.selexmethod = item.get('selexmethod')
        self.numberofselectionrounds = item.get('numberofselectionrounds')
        self.separationpartitioningmethod = item.get('separationpartitioningmethod')
        self.elutionrecoverymethod = item.get('elutionrecoverymethod')
        self.selectionsolutionbufferingagent = item.get('selectionsolutionbufferingagent')

        self.selectionsolutionph = item.get('selectionsolutionph')
        self.selectionsolutiontemperature = item.get('selectionsolutiontemperature')
        self.concentrationkm = item.get('concentrationkm')
        self.concentrationmgm = item.get('concentrationmgm')
        self.concentrationnam = item.get('concentrationnam')
        self.concentrationznm = item.get('concentrationznm')
        self.concentrationcam = item.get('concentrationcam')
        self.concentrationotherm = item.get('concentrationotherm')
        self.affinitymethod = item.get('affinitymethod')
        self.affinitymethodconditions = item.get('affinitymethodconditions')
        self.aptamertype = item.get('aptamertype')
        self.othermodification = item.get('othermodification')
        self.kdvalueinmolar = item.get('kdvalueinmolar')
        self.kderror = item.get('kderror')
        self.testedapplicationpurpose = item.get('testedapplicationpurpose')
        self.mutationalanalysis = item.get('mutationalanalysis')
        self.minamersyesno = item.get('minamersyesno')
        self.minimeronesequence = item.get('minimeronesequence')
        self.minimeronekd = item.get('minimeronekd')
        self.minimertwosequence = item.get('minimertwosequence')
        self.minimertwokd = item.get('minimertwokd')
        self.minimerthreesequence = item.get('minimerthreesequence')
        self.minimerthreekd = item.get('minimerthreekd')
        self.notes = item.get('notes')

        self.status = item.get('status')
        self.operator = item.get('operator')

    def __repr__(self):
        return '<temp_article %r>' % self.name





class TempArticleSchema(ma.ModelSchema):
    class Meta:
        model = TempArticle

    # immutable = fields.Boolean()
    id = fields.Integer(dump_only=True)
    name = fields.String()
    pubmedid = fields.String()
    doinumber = fields.String()
    aptamertargettype = fields.String()
    aptamertargetname = fields.String()
    aptamersequence = fields.String()
    lengthofrandomregion = fields.String()
    templatesequence = fields.String()
    yearofpublication = fields.String()
    templatebias = fields.String()
    selexmethod = fields.String()
    numberofselectionrounds = fields.String()
    separationpartitioningmethod = fields.String()
    elutionrecoverymethod = fields.String()
    selectionsolutionbufferingagent = fields.String()

    selectionsolutionph = fields.String()
    selectionsolutiontemperature = fields.String()
    concentrationkm = fields.String()
    concentrationmgm = fields.String()
    concentrationnam = fields.String()
    concentrationznm = fields.String()
    concentrationcam = fields.String()
    concentrationotherm = fields.String()
    affinitymethod = fields.String()
    affinitymethodconditions = fields.String()
    aptamertype = fields.String()
    othermodification = fields.String()
    kdvalueinmolar = fields.String()
    kderror = fields.String()
    testedapplicationpurpose = fields.String()
    mutationalanalysis = fields.String()
    minamersyesno = fields.String()
    minimeronesequence = fields.String()
    minimeronekd = fields.String()
    minimertwosequence = fields.String()
    minimertwokd = fields.String()
    minimerthreesequence = fields.String()
    minimerthreekd = fields.String()
    notes = fields.String()

    status = fields.String()
    operator = fields.String()
